Description: "AWS Cloudformation example to deploy a high availability web app."
Parameters:
    CIDRvpc:
      Description: CIDR Network for VPC
      Type: String
      Default: 10.1.0.0/16
      AllowedPattern: (\d{1,3}\.){3}\d{1,3}\/\d{2}
    ProjectName:
      Description: Project Name
      Type: String
      Default: IAC-Udacity
    CIDRPrivateSubnet1:
      Description: CIDR Network for PrivateSubnet1
      Type: String
      Default: 10.1.0.0/24
      AllowedPattern: (\d{1,3}\.){3}\d{1,3}\/\d{2}
    CIDRPrivateSubnet2:
      Description: CIDR Network for PrivateSubnet1
      Type: String
      Default: 10.1.1.0/24
      AllowedPattern: (\d{1,3}\.){3}\d{1,3}\/\d{2}
    CIDRPublicSubnet:
      Description: CIDR Network for PrivateSubnet1
      Type: String
      Default: 10.1.2.0/24
      AllowedPattern: (\d{1,3}\.){3}\d{1,3}\/\d{2}
Resources:
    WEBvpc:
      Type: AWS::EC2::VPC
      Properties: 
        CidrBlock: !Ref CIDRvpc
        Tags: 
          - Key: Project
            Value: !Ref ProjectName
    
    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties: 
        Tags:
          - Key: Project
            Value: !Ref ProjectName
    
    InternetGatewayAttach:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties: 
        InternetGatewayId: !Ref InternetGateway
        VpcId: !Ref WEBvpc
    
    PrivateSubnet1:
      Type: AWS::EC2::Subnet
      Properties: 
        AvailabilityZone: !Select
          - 0
          - !GetAZs
            Ref: 'AWS::Region'
        CidrBlock: !Ref CIDRPrivateSubnet1
        MapPublicIpOnLaunch: false
        VpcId: !Ref WEBvpc
    
    PrivateSubnet2:
      Type: AWS::EC2::Subnet
      Properties: 
        AvailabilityZone: !Select
          - 1
          - !GetAZs
            Ref: 'AWS::Region'
        CidrBlock: !Ref CIDRPrivateSubnet2
        MapPublicIpOnLaunch: false
        VpcId: !Ref WEBvpc
    
    PublicSubnet:
      Type: AWS::EC2::Subnet
      Properties: 
        AvailabilityZone: !Select
          - 0
          - !GetAZs
            Ref: 'AWS::Region'
        CidrBlock: !Ref CIDRPublicSubnet
        MapPublicIpOnLaunch: true
        VpcId: !Ref WEBvpc
    
    InstancesSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http to internal instances
        VpcId: !Ref WEBvpc
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0